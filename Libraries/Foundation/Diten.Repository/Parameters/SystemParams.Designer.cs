//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Diten.Parameters {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.2.0.0")]
    public sealed partial class SystemParams : global::System.Configuration.ApplicationSettingsBase {
        
        private static SystemParams defaultInstance = ((SystemParams)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new SystemParams())));
        
        public static SystemParams Default {
            get {
                return defaultInstance;
            }
        }
        
        /// <summary>
        /// Get default user with normal user privilege for doing normal jobs. Value is [DTDU]
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Get default user with normal user privilege for doing normal jobs. Value is [DTDU" +
            "]")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("DTDU")]
        public string DefaultUser {
            get {
                return ((string)(this["DefaultUser"]));
            }
        }
        
        /// <summary>
        /// Get default user password.
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Get default user password.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("kdcsvDELwRyUgZNkpGLgfN46GPX2v26pT9MhRj1gMLhnepCpUVhCWBt4FsGmUF04dcas2ewPF1mcuWuvj" +
            "efsJFpkAD9CRrJUF7Jc")]
        public string DefaultUserPassword {
            get {
                return ((string)(this["DefaultUserPassword"]));
            }
        }
        
        /// <summary>
        /// Get agmin user with administrators group privilege for doing normal jobs. Value is [DTAU]
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Get agmin user with administrators group privilege for doing normal jobs. Value i" +
            "s [DTAU]")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("DTAU")]
        public string AdminUser {
            get {
                return ((string)(this["AdminUser"]));
            }
        }
        
        /// <summary>
        /// Get adminstrator user password.
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Get adminstrator user password.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("3pvC6MK7kzn2WgRY61lWZcAystyZaJEIov0hZnpNWQ7CqBhXPOgLWsxo0ULsK5qtAtJzLQHAOlv2Ge2aw" +
            "acdGmW0DQpxRGOIfUKD")]
        public string AdminUserPassword {
            get {
                return ((string)(this["AdminUserPassword"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("get_")]
        public string GetFrameFunctionExtention {
            get {
                return ((string)(this["GetFrameFunctionExtention"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("set_")]
        public string SetFrameFunctionExtention {
            get {
                return ((string)(this["SetFrameFunctionExtention"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("*.dll")]
        public string AllDLLFiles {
            get {
                return ((string)(this["AllDLLFiles"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Win32_")]
        public string Win32Extention {
            get {
                return ((string)(this["Win32Extention"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("mongodb://")]
        public string MongoDBProtocolExtention {
            get {
                return ((string)(this["MongoDBProtocolExtention"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("32768")]
        public int MaxUrlLength {
            get {
                return ((int)(this["MaxUrlLength"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("DITeN Server")]
        public string DefaultMailDisplayName {
            get {
                return ((string)(this["DefaultMailDisplayName"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("%ProgramFiles%\\DITeN\\Repository\\Temp")]
        public string TempFolderPath {
            get {
                return ((string)(this["TempFolderPath"]));
            }
        }
        
        /// <summary>
        /// Value is [\\{0} \root\microsoftdns]
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Value is [\\\\{0} \\root\\microsoftdns]")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\\\\{0} \\root\\microsoftdns")]
        public string Microsoft_DNS {
            get {
                return ((string)(this["Microsoft_DNS"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Templates")]
        public string TemplatesFolder {
            get {
                return ((string)(this["TemplatesFolder"]));
            }
        }
        
        /// <summary>
        /// The 1&apos;st parameter is the user, The 2&apos;nd parameter is the password, The 3&apos;rd parameter is the password, The 4&apos;th parameter is the password of the user for executing the task. 
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("The 1\'st parameter is the user, The 2\'nd parameter is the password, The 3\'rd para" +
            "meter is the password, The 4\'th parameter is the password of the user for execut" +
            "ing the task. ")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("schtasks /Create /RU \"{0}\" /RP \"{1}\" /TN \"IIS Log parser for [{2}]\" /XML \"{3}\"")]
        public string CMDTaskScheduler {
            get {
                return ((string)(this["CMDTaskScheduler"]));
            }
            set {
                this["CMDTaskScheduler"] = value;
            }
        }
    }
}
